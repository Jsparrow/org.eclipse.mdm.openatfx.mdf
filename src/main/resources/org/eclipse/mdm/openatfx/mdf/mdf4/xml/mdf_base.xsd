<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="http://www.asam.net/mdf/v4" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:mdf="http://www.asam.net/mdf/v4" targetNamespace="http://www.asam.net/mdf/v4" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">
			This Schema defines (simple and complex) base types to be used 
			in the schema definitions for ASAM COMMON MDF 4.0.0 MDBLOCKS
		</xs:documentation>
	</xs:annotation>
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
	<!-- ============== base types (complexTypes) ======================= -->
	<xs:complexType name="base_string">
		<xs:annotation>
			<xs:documentation>xs:string contents with base attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attributeGroup ref="base_attributes"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="base_name">
		<xs:annotation>
			<xs:documentation>xs:normalizedString contents with base attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:normalizedString">
				<xs:attributeGroup ref="base_attributes"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="base_number">
		<xs:annotation>
			<xs:documentation>xs:decimal contents with base attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attributeGroup ref="base_attributes"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="base_version">
		<xs:annotation>
			<xs:documentation>version_pattern contents with base attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="version_pattern">
				<xs:attributeGroup ref="base_attributes"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="base_id_name">
		<xs:annotation>
			<xs:documentation>id_name_pattern contents with base attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="id_name_pattern">
				<xs:attributeGroup ref="base_attributes"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- ============== user defined elements ======================= -->
	<xs:group name="text_elements">
		<xs:annotation>
			<xs:documentation>Equivalent to a TXBLOCK. To be included as first element in every MDBLOCK.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TX"/>
		</xs:sequence>
	</xs:group>
	<xs:element name="TX">
		<xs:annotation>
			<xs:documentation>Value is equivalent to the contents of a TXBLOCK.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="base_attributes"/>
		</xs:complexType>
	</xs:element>
	<!-- ============== user defined elements ======================= -->
	<xs:group name="user_defined">
		<xs:annotation>
			<xs:documentation>Extensibility section, to be inclueded at the end of every MDF block.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="common_properties" minOccurs="0"/>
			<xs:element ref="extensions" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:element name="common_properties" type="common_properties_type">
		<xs:annotation>
			<xs:documentation>General purpose properties that any tool can show to the user.</xs:documentation>
		</xs:annotation>
		<xs:unique name="uniqueTreesRoot">
			<xs:selector xpath="mdf:tree"/>
			<xs:field xpath="@name"/>
		</xs:unique>
		<xs:unique name="uniqueElementsRoot">
			<xs:selector xpath="mdf:e"/>
			<xs:field xpath="@name"/>
		</xs:unique>
		<xs:unique name="uniqueListsRoot">
			<xs:selector xpath="mdf:list"/>
			<xs:field xpath="@name"/>
		</xs:unique>
		<xs:unique name="uniqueElistsRoot">
			<xs:selector xpath="mdf:elist"/>
			<xs:field xpath="@name"/>
		</xs:unique>
	</xs:element>
	<xs:complexType name="common_properties_type">
		<xs:annotation>
			<xs:documentation>General purpose properties that any tool can show to the user.</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="e">
				<xs:annotation>
					<xs:documentation>Generic tag with arbitrary contents (plain text or XHTML).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="property_name_attributes"/>
					<xs:attributeGroup ref="property_value_attributes"/>
					<xs:attributeGroup ref="base_attributes"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="tree">
				<xs:annotation>
					<xs:documentation>Root of a tree. May contain e, tree, list or elist tags</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="common_properties_type">
							<xs:attributeGroup ref="property_name_attributes"/>
							<xs:attributeGroup ref="base_attributes"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
				<xs:unique name="uniqueTreesInTree">
					<xs:selector xpath="mdf:tree"/>
					<xs:field xpath="@name"/>
				</xs:unique>
				<xs:unique name="uniqueElementsInTree">
					<xs:selector xpath="mdf:e"/>
					<xs:field xpath="@name"/>
				</xs:unique>
				<xs:unique name="uniqueListsInTree">
					<xs:selector xpath="mdf:list"/>
					<xs:field xpath="@name"/>
				</xs:unique>
				<xs:unique name="uniqueElistsInTree">
					<xs:selector xpath="mdf:elist"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="list">
				<xs:annotation>
					<xs:documentation>List of (complex) items.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="li" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Item of a list. May contain e, tree, list or elist tags</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="common_properties_type">
										<xs:attributeGroup ref="base_attributes"/>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
							<xs:unique name="uniqueTreesInListItem">
								<xs:selector xpath="mdf:tree"/>
								<xs:field xpath="@name"/>
							</xs:unique>
							<xs:unique name="uniqueElementsInListItem">
								<xs:selector xpath="mdf:e"/>
								<xs:field xpath="@name"/>
							</xs:unique>
							<xs:unique name="uniqueListsInListItem">
								<xs:selector xpath="mdf:e"/>
								<xs:field xpath="@list"/>
							</xs:unique>
							<xs:unique name="uniqueElistsInListItem">
								<xs:selector xpath="mdf:e"/>
								<xs:field xpath="@elist"/>
							</xs:unique>
						</xs:element>
					</xs:sequence>
					<xs:attributeGroup ref="property_name_attributes"/>
					<xs:attributeGroup ref="base_attributes"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="elist">
				<xs:annotation>
					<xs:documentation>List of simple items (items all have same type)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="eli" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Item of an elist, same content as e tag.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attributeGroup ref="base_attributes"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attributeGroup ref="property_name_attributes"/>
					<xs:attributeGroup ref="property_value_attributes"/>
					<xs:attributeGroup ref="base_attributes"/>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:attributeGroup name="property_name_attributes">
		<xs:annotation>
			<xs:documentation>Properties for e, tree, list and elist tag</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the property. Must be unique within the containing parent node.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="desc" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>description text that can be used to explain the meaning of element content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="property_value_attributes">
		<xs:annotation>
			<xs:documentation>Properties for e and elist tags only</xs:documentation>
		</xs:annotation>
		<xs:attribute name="type" type="type_pattern" default="string">
			<xs:annotation>
				<xs:documentation>data type of element content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute ref="xml:lang" use="optional">
			<xs:annotation>
				<xs:documentation>language of element content (if a atextual description).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ro" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>Indicates if value is read only. Used by tool to decide if user may edit value or not.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="unit_attributes"/>
	</xs:attributeGroup>
	<xs:element name="extensions" type="extensions_type">
		<xs:annotation>
			<xs:documentation>Section for vendor specific extensions.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="extensions_type">
		<xs:annotation>
			<xs:documentation>Section for vendor specific extensions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extension" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="base_attributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- ============== alternative name elements ======================= -->
	<xs:element name="names" type="names_type"/>
	<xs:complexType name="names_type">
		<xs:annotation>
			<xs:documentation>Alternative names and descriptions for a named object (e.g. channel, group, source...)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="name_type" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Name of object in different languages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="display" type="description_type" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Display name of object. May exist in different languages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="vendor" type="description_type" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Vendor specific name, e.g. name as used in a specific tool.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="description_type" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of object. May exist in defferent languages.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="root_attributes"/>
	</xs:complexType>
	<xs:complexType name="names_with_default_type">
		<xs:complexContent>
			<xs:extension base="names_type">
				<xs:attribute name="name" type="name_pattern" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="name_type">
		<xs:complexContent>
			<xs:extension base="base_id_name">
				<xs:attribute ref="xml:lang" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="description_type" mixed="true">
		<xs:sequence>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute ref="xml:lang" use="optional"/>
		<xs:attributeGroup ref="base_attributes"/>
	</xs:complexType>
	<!-- ============== unit elements ======================= -->
	<xs:group name="unit_elements">
		<xs:annotation>
			<xs:documentation>Elements for specifying a unit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ho_unit" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a harmonized objects unit &lt;ho:UNIT-SPEC> defined in hd_md_comment.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="unit_ref" type="xs:IDREF" use="required"/>
					<xs:attributeGroup ref="base_attributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<!-- ============== formula elements ======================= -->
	<xs:element name="formula" type="formula_type">
		<xs:annotation>
			<xs:documentation>A formula specification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="formula_type">
		<xs:sequence>
			<xs:element name="syntax">
				<xs:annotation>
					<xs:documentation>Formula expressed in general expression syntax.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="base_string">
							<xs:attribute name="version" type="version_pattern" default="1.0">
								<xs:annotation>
									<xs:documentation>Version of the general expression syntax used in the formula.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="custom_syntax" type="custom_syntax_type" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="variables" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Mapping from variable names used in the formula to MDF CNBLOCKS</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="var" type="variable_type" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="base_attributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="root_attributes"/>
	</xs:complexType>
	<xs:complexType name="custom_syntax_type">
		<xs:annotation>
			<xs:documentation>Formula expressed in an alternative syntax, e.g. as used by the originating tool.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="base_string">
				<xs:attribute name="version" type="version_pattern" use="required">
					<xs:annotation>
						<xs:documentation>Version of the syntax used in the custom_syntax formula.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="source" use="required">
					<xs:annotation>
						<xs:documentation>Name of the syntax used in the custom_syntax formula.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="variable_type">
		<xs:annotation>
			<xs:documentation>Describes an input variable for the formula.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="id_name_pattern">
				<xs:attributeGroup ref="root_attributes"/>
				<xs:attributeGroup ref="channel_reference_attributes"/>
				<xs:attribute name="raw" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>Indicates if the formula shall work on the internal (true) or physical (false) value of the input variable.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:attributeGroup name="channel_reference_attributes">
		<xs:annotation>
			<xs:documentation>The attributes cn, cs, cp, gn, gs, gp uniquely identify a CN block within the entire MDF file. The CN block can be on the top level or it can be a struct member.	The idx attribute identifies a single element in the case that the CN block is an element of an array or contains an array.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="cn" type="id_name_pattern" use="required">
			<xs:annotation>
				<xs:documentation>Reference to the name of a CN block.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="cs" type="id_name_pattern" use="optional">
			<xs:annotation>
				<xs:documentation>Reference to the source of a CN block (via SI block).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="cp" type="id_name_pattern" use="optional">
			<xs:annotation>
				<xs:documentation>Reference to the path of a CN block (via SI block).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="gn" type="id_name_pattern" use="optional">
			<xs:annotation>
				<xs:documentation>Reference to the name of a CG block.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="gs" type="id_name_pattern" use="optional">
			<xs:annotation>
				<xs:documentation>Reference to the source of a CG block (via SI block).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="gp" type="id_name_pattern" use="optional">
			<xs:annotation>
				<xs:documentation>Reference to the path of a CG block (via SI block).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="idx" type="idx_list_pattern" use="optional">
			<xs:annotation>
				<xs:documentation>White-space separated list of zero-based indices into arrays described by CA blocks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<!-- ============== patterns (simpleType) ======================= -->
	<xs:simpleType name="name_pattern">
		<xs:annotation>
			<xs:documentation>name_pattern is a string type. A name is a token string (does not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces) and must have at least one character. It is used for the "name" attribute.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="version_pattern">
		<xs:annotation>
			<xs:documentation>version_pattern is a string pattern. It is used for the "version" attribute.
			Valid values are "1", "1.0", "0.123.3", "0001.00", "0.0.0.0.0.0.0", "1.0 SP1", "12.0.23 SP1 RC2 Beta", "1 anystring", "2.3   2dasde@", "1.0    ", "1.0 .0".
			Invalid values are ".0", "0.", "0..2", "Abc", "-1", "1.0sp1", "1.0 ", "1.0. SP2"</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9])+([.]([0-9])+)*( .+)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="hex_0x_pattern">
		<xs:annotation>
			<xs:documentation>hex_0x_pattern is a string pattern. It is used for hexadecimal numbers that start with 0x.
			Valid values are hexadecimal numbers with 3-18 characters like "0x13", "0x2ab2f", "0xFFFFFFF" or the empty string "".
			Invalid values are "ABC" (0x prefix is required).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="3"/>
			<xs:maxLength value="18"/>
			<xs:pattern value="0x[a-fA-F0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="id_name_pattern">
		<xs:annotation>
			<xs:documentation>id_name_pattern is a string pattern. Restricts names that may be used as ids.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[^&quot;]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="idx_list_pattern">
		<xs:annotation>
			<xs:documentation>id_list_pattern is a white-space separated list of unsigned integer value for the indices of an array component.</xs:documentation>
		</xs:annotation>
		<xs:list>
			<xs:simpleType>
				<xs:restriction base="xs:unsignedLong"/>
			</xs:simpleType>
		</xs:list>
	</xs:simpleType>
	<xs:simpleType name="type_pattern">
		<xs:annotation>
			<xs:documentation>Enumeration of data type names (same names and same restrictions as for XSD built-in data types)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="string"/>
			<xs:enumeration value="decimal"/>
			<xs:enumeration value="integer"/>
			<xs:enumeration value="float"/>
			<xs:enumeration value="boolean"/>
			<xs:enumeration value="date"/>
			<xs:enumeration value="time"/>
			<xs:enumeration value="dateTime"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- ============== Attribute Groups ======================= -->
	<xs:attributeGroup name="tool_identification_attributes">
		<xs:annotation>
			<xs:documentation>Identifies the tool that provided the information in the parent tag.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ci" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>Zero-based index into the list of FH blocks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="unit_attributes">
		<xs:annotation>
			<xs:documentation>Attributes for specifying a unit.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="unit" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>display string for unit</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="unit_ref" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>ref-ID to ASAM-HO unit defined in MDBLOCK of hd_md_comment tag &lt;ho_refs></xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="base_attributes">
		<xs:annotation>
			<xs:documentation>Group of universal base attributes that can be attached to any tag.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="tool_identification_attributes"/>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="root_attributes">
		<xs:annotation>
			<xs:documentation>Group of universal attributes that can be attached to the root tag.</xs:documentation>
		</xs:annotation>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:attributeGroup>
</xs:schema>
